{"version":3,"sources":["utils.js","gui.js","js.js"],"names":["createNode","n","v","p","document","createElementNS","setAttributeNS","replace","m","o","s","toLowerCase","downloadContent","filename","content","blob","Blob","event","MouseEvent","window","a","createElement","download","href","URL","createObjectURL","dispatchEvent","emptyElement","element","firstChild","removeChild","getParameterByName","name","url","location","regex","results","RegExp","exec","decodeURIComponent","getQueryStringObject","search","substring","split","map","str","key","value","decodeURI","reduce","prev","curr","Object","assign","getQueryStringObjectFromHash","hash","serializeObject","obj","keys","k","join","controls","id","type","min","max","step","setAttributes","attributes","entries","forEach","val","setAttribute","elements","control","label","text","createTextNode","input","innerHTML","appendChild","addEventListener","target","options","Array","from","querySelectorAll","memo","item","getElementById","params","svg","render","downloadButton","table","parseInt","modulo","rotation","start","end","size","circle","fill","_","index","Math","PI","angle","x","width","cos","y","height","sin","filteredLines","i","p1","p2","x1","y1","x2","y2","center","w","abs","h","diffx","diffy","res","filter","keepEveryNLines","keepEveryNLinesShift","minLength","line","b","length","sqrt","coordinates","strokeWidth","stroke","innerText","values","outerHTML"],"mappings":"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","file":"js.7b2127b1.js","sourceRoot":"..","sourcesContent":["export const createNode = (n, v) => {\n  n = document.createElementNS(\"http://www.w3.org/2000/svg\", n);\n  for (var p in v)\n    n.setAttributeNS(null, p.replace(/[A-Z]/g, function (m, p, o, s) {\n      return \"-\" + m.toLowerCase();\n    }), v[p]);\n  return n\n};\n\nexport const downloadContent = (filename, content) => {\n  const blob = new Blob([content]);\n  const event = new MouseEvent('click', {\n    'view': window,\n    'bubbles': true,\n    'cancelable': true\n  });\n  const a = document.createElement(\"a\");\n  a.download = filename;\n  a.href = URL.createObjectURL(blob);\n  a.dispatchEvent(event);\n};\n\nexport const emptyElement = element => {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n  return element;\n};\n\nexport const getParameterByName = (name, url) => {\n  if (!url) {\n    url = window.location.href;\n  }\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n  if (!results) return undefined;\n  if (!results[2]) return \"\";\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n};\n\nexport const getQueryStringObject = () => {\n  return window.location.search.substring(1).split('&')\n      .map(str => {\n        let [key, value] = str.split('=');\n        return {[key]: decodeURI(value)};\n      })\n      .reduce((prev, curr) => Object.assign(prev, curr));\n};\n\nexport const getQueryStringObjectFromHash = () => {\n  return window.location.hash.substring(1).split('&')\n      .map(str => {\n        let [key, value] = str.split('=');\n        return {[key]: decodeURI(value)};\n      })\n      .reduce((prev, curr) => Object.assign(prev, curr));\n};\n\n\nexport const serializeObject = obj => `#${Object.keys(obj).map(k=>`${k}=${obj[k]}`).join('&')}`;\n","export const controls = [{\n  id: 'table',\n  type: 'range',\n  min: 2,\n  max: 1500,\n  step: 1,\n  value: 2\n}, {\n  id: 'start',\n  type: 'range',\n  min: 0,\n  max: 100,\n  step: 0.1,\n  value: 0\n}, {\n  id: 'end',\n  type: 'range',\n  min: 0,\n  max: 100,\n  step: 0.1,\n  value: 100\n}, {\n  id: 'modulo',\n  type: 'range',\n  min: 0,\n  max: 1500,\n  step: 1,\n  value: 360\n}, {\n  id: 'rotation',\n  type: 'range',\n  min: -360,\n  max: 360,\n  step: 1,\n  value: 0\n}, {\n  id: 'minLength',\n  type: 'range',\n  min: 0,\n  max: 1500,\n  step: 0.1,\n  value: 0\n}, {\n  id: 'keepEveryNLines',\n  type: 'range',\n  min: 1,\n  max: 1500,\n  step: 1,\n  value: 1\n}, {\n  id: 'keepEveryNLinesShift',\n  type: 'range',\n  min: 0,\n  max: 1500,\n  step: 1,\n  value: 0\n}, {\n  id: 'center',\n  type: 'range',\n  min: 0,\n  max: 1,\n  step: 1,\n  value: 0\n}];","import {\n  createNode,\n  downloadContent,\n  emptyElement,\n  getQueryStringObjectFromHash,\n  serializeObject\n} from './utils.js';\n\nimport {controls} from \"./gui.js\";\n\n\nconst setAttributes = (element, attributes) => Object.entries(attributes)\n    .forEach(([key, val]) =>\n        element.setAttribute(key, val));\n\nconst elements = controls.map(control => {\n  const label = document.createElement('label');\n  const text = document.createTextNode(control.id);\n  const input = document.createElement('input');\n\n  setAttributes(input, control);\n\n  const val = document.createElement('span');\n  val.innerHTML = ` (${control.value})`;\n\n  label.appendChild(text);\n  label.appendChild(val);\n  label.appendChild(input);\n\n  input.addEventListener('change', event => {\n    val.innerHTML = ` (${event.target.value})`;\n    const options = Array.from(document.querySelectorAll('input'))\n        .map(({id, value}) => ({[id]: value}))\n        .reduce((memo, item) => Object.assign(memo, item), {});\n    location.hash = serializeObject(options);\n  });\n\n  return label;\n});\n\nconst target = document.getElementById('controls');\nelements.forEach(element => target.appendChild(element));\n\n// const search = window.location.search;\nconst params = getQueryStringObjectFromHash();\nObject.keys(params).forEach(key => {\n  const input = document.getElementById(key);\n  if (input) {\n    input.value = params[key];\n  }\n});\n\nconst svg = createNode(\"svg\");\ndocument.getElementById('js-paper').appendChild(svg);\n\nwindow.addEventListener(\"hashchange\", event => {\n  const options = getQueryStringObjectFromHash();\n  render({svg, ...options});\n  Object.keys(options).forEach(key => {\n    const input = document.getElementById(key);\n    if (input) {\n      input.value = options[key];\n    }\n  });\n});\n\nconst options = Array.from(document.querySelectorAll('input'))\n    .map(({id, value}) => ({[id]: value}))\n    .reduce((memo, item) => Object.assign(memo, item), {});\nrender({svg, ...options});\n\n\nconst downloadButton = document.createElement('button');\ndownloadButton.innerText = \"Download SVG\";\ndownloadButton.addEventListener('click', event => {\n  const options = Array.from(document.querySelectorAll('input'))\n      .map(({id, value}) => ({[id]: value}))\n      .reduce((memo, item) => Object.assign(memo, item), {});\n  render({svg, ...options});\n  const values = Object.values(options).join('-');\n  downloadContent(`mandala-${values}.svg`, svg.outerHTML);\n});\ntarget.appendChild(downloadButton);\n\nfunction render(options) {\n\n  const {svg} = options;\n\n  const size = 540;\n  const table = parseInt(options.table);\n  const modulo = parseInt(options.modulo);\n  const rotation = parseInt(options.rotation);\n  const start = parseInt((options.start || 0) / 100 * modulo);\n  const end = parseInt((options.end || 100) / 100 * modulo);\n\n  const width = size;\n  const height = size;\n\n  emptyElement(svg);\n  svg.setAttribute(\"viewBox\", `0, 0, ${size}, ${size}`);\n  svg.setAttribute('width', width);\n  svg.setAttribute('height', height);\n\n\n  // Create an array of circle coordinates.\n  const circle = new Array(modulo).fill(0).map((_, index) => index * (Math.PI * 2) / modulo).map(angle => {\n    const x = width / 2 * Math.cos(angle + (Math.PI / 180 * rotation)) + width / 2;\n    const y = height / 2 * Math.sin(angle + (Math.PI / 180 * rotation)) + height / 2;\n    return {x, y};\n  });\n\n  // Create the lines.\n  const lines = new Array(end - start).fill(0).map((_, index) => start + index).map(i => {\n    const p1 = parseInt(i % modulo, 10);\n    const p2 = parseInt((table * i) % modulo, 10);\n\n    const start = circle[p1];\n    const end = circle[p2];\n\n    const {x: x1, y: y1} = start;\n    const {x: x2, y: y2} = end;\n\n    if (options.center === \"1\") {\n      const w = Math.abs(x1 - x2);\n      const h = Math.abs(y1 - y2);\n\n      const x = x1 < x2 ? x1 : x2;\n      const y = y1 < y2 ? y1 : y2;\n      const diffx = size / 2 - x;\n      const diffy = size / 2 - y;\n\n      const res = {\n        x1: x1 + diffx - w / 2,\n        x2: x2 + diffx - w / 2,\n        y1: y1 + diffy - h / 2,\n        y2: y2 + diffy - h / 2\n      };\n\n      return res;\n    }\n\n    return {x1, y1, x2, y2};\n  });\n\n  const filteredLines = lines.filter((_, index) => {\n    return index % parseInt(options.keepEveryNLines) === parseInt(options.keepEveryNLinesShift);\n  });\n\n  const filteredLines2 = parseInt(options.minLength) === 0 ? filteredLines : filteredLines.filter(line => {\n    const a = line.x1 - line.x2;\n    const b = line.y1 - line.y2;\n    const length = Math.sqrt(a * a + b * b);\n    return length > options.minLength\n  });\n\n\n  // Append lines to svg element.\n  filteredLines2.forEach(coordinates => {\n    const line = createNode(\"line\", {\n      strokeWidth: 0.4,\n      stroke: \"#FFFFFF\", ...coordinates\n    });\n    svg.appendChild(line);\n  });\n\n}"]}